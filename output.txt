==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_utility.php
=================================================
55: 		if (isset($this->data_cache['db_names']))
56: 		{
57: 			return $this->data_cache['db_names'];
58: 		}
59: 
60: 		$query = $this->db->query($this->_list_databases());
61: 		$dbs = array();
62: 		if ($query->num_rows() > 0)
63: 		{
64: 			foreach ($query->result_array() as $row)
65: 			{

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_utility.php
=================================================
112: 		if (is_bool($sql))
113: 		{
114: 				show_error('db_must_use_set');
115: 		}
116: 
117: 		$query = $this->db->query($sql);
118: 		$res = $query->result_array();
119: 
120: 		// Note: Due to a bug in current() that affects some versions
121: 		// of PHP we can not pass function call directly into it
122: 		return current($res);

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_utility.php
=================================================
140: 			if (is_bool($sql))
141: 			{
142: 				return $sql;
143: 			}
144: 
145: 			$query = $this->db->query($sql);
146: 
147: 			// Build the result array...
148: 			// Note: Due to a bug in current() that affects some versions
149: 			// of PHP we can not pass function call directly into it
150: 			$res = $query->result_array();

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_utility.php
=================================================
175: 		if (is_bool($sql))
176: 		{
177: 			return $sql;
178: 		}
179: 
180: 		$query = $this->db->query($sql);
181: 
182: 		// Note: Due to a bug in current() that affects some versions
183: 		// of PHP we can not pass function call directly into it
184: 		$res = $query->result_array();
185: 		return current($res);

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_forge.php
=================================================
58: 		if (is_bool($sql))
59: 		{
60: 			return $sql;
61: 		}
62: 
63: 		return $this->db->query($sql);
64: 	}
65: 
66: 	// --------------------------------------------------------------------
67: 
68: 	/**

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_forge.php
=================================================
79: 		if (is_bool($sql))
80: 		{
81: 			return $sql;
82: 		}
83: 
84: 		return $this->db->query($sql);
85: 	}
86: 
87: 	// --------------------------------------------------------------------
88: 
89: 	/**

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_forge.php
=================================================
190: 		}
191: 
192: 		$sql = $this->_create_table($this->db->dbprefix.$table, $this->fields, $this->primary_keys, $this->keys, $if_not_exists);
193: 
194: 		$this->_reset();
195: 		return $this->db->query($sql);
196: 	}
197: 
198: 	// --------------------------------------------------------------------
199: 
200: 	/**

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_forge.php
=================================================
211: 		if (is_bool($sql))
212: 		{
213: 			return $sql;
214: 		}
215: 
216: 		return $this->db->query($sql);
217: 	}
218: 
219: 	// --------------------------------------------------------------------
220: 
221: 	/**

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_forge.php
=================================================
232: 		{
233: 			show_error('A table name is required for that operation.');
234: 		}
235: 
236: 		$sql = $this->_rename_table($this->db->dbprefix.$table_name, $this->db->dbprefix.$new_table_name);
237: 		return $this->db->query($sql);
238: 	}
239: 
240: 	// --------------------------------------------------------------------
241: 
242: 	/**

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_forge.php
=================================================
269: 
270: 			$sql = $this->_alter_table('ADD', $this->db->dbprefix.$table, $this->fields, $after_field);
271: 
272: 			$this->_reset();
273: 
274: 			if ($this->db->query($sql) === FALSE)
275: 			{
276: 				return FALSE;
277: 			}
278: 		}
279: 

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_forge.php
=================================================
304: 			show_error('A column name is required for that operation.');
305: 		}
306: 
307: 		$sql = $this->_alter_table('DROP', $this->db->dbprefix.$table, $column_name);
308: 
309: 		return $this->db->query($sql);
310: 	}
311: 
312: 	// --------------------------------------------------------------------
313: 
314: 	/**

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/DB_forge.php
=================================================
347: 
348: 			$sql = $this->_alter_table('CHANGE', $this->db->dbprefix.$table, $this->fields);
349: 
350: 			$this->_reset();
351: 
352: 			if ($this->db->query($sql) === FALSE)
353: 			{
354: 				return FALSE;
355: 			}
356: 		}
357: 

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/drivers/mysql/mysql_utility.php
=================================================
93: 			{
94: 				continue;
95: 			}
96: 
97: 			// Get the table schema
98: 			$query = $this->db->query("SHOW CREATE TABLE `".$this->db->database.'`.`'.$table.'`');
99: 
100: 			// No result means the table name was invalid
101: 			if ($query === FALSE)
102: 			{
103: 				continue;

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/app/system/database/drivers/mysql/mysql_utility.php
=================================================
126: 			{
127: 				continue;
128: 			}
129: 
130: 			// Grab all the data from the current table
131: 			$query = $this->db->query("SELECT * FROM $table");
132: 
133: 			if ($query->num_rows() == 0)
134: 			{
135: 				continue;
136: 			}

==================================================
vulnerability : dir
description : FALSE may occur failure of sanitizing filename, directory traversal
reference : http://yyyyyy.yyyyy
filename : ../sample/codeigniter/lcb/app/system/core/Security.php
=================================================
519: 	 *
520: 	 * @param	string
521: 	 * @param 	bool
522: 	 * @return	string
523: 	 */
524: 	public function sanitize_filename($str, $relative_path = FALSE)
525: 	{
526: 		$bad = array(
527: 			"../",
528: 			"<!--",
529: 			"-->",

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.mj.php
=================================================
277: |
278: | Determines whether the XSS filter is always active when GET, POST or
279: | COOKIE data is encountered
280: |
281: */
282: $config['global_xss_filtering'] = FALSE;
283: 
284: /*
285: |--------------------------------------------------------------------------
286: | Cross Site Request Forgery
287: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.mj.php
=================================================
291: |
292: | 'csrf_token_name' = The token name
293: | 'csrf_cookie_name' = The cookie name
294: | 'csrf_expire' = The number in seconds the token should expire.
295: */
296: $config['csrf_protection'] = FALSE;
297: $config['csrf_token_name'] = 'csrf_test_name';
298: $config['csrf_cookie_name'] = 'csrf_cookie_name';
299: $config['csrf_expire'] = 7200;
300: 
301: /*

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.template.php
=================================================
277: |
278: | Determines whether the XSS filter is always active when GET, POST or
279: | COOKIE data is encountered
280: |
281: */
282: $config['global_xss_filtering'] = FALSE;
283: 
284: /*
285: |--------------------------------------------------------------------------
286: | Cross Site Request Forgery
287: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.template.php
=================================================
291: |
292: | 'csrf_token_name' = The token name
293: | 'csrf_cookie_name' = The cookie name
294: | 'csrf_expire' = The number in seconds the token should expire.
295: */
296: $config['csrf_protection'] = FALSE;
297: $config['csrf_token_name'] = 'csrf_test_name';
298: $config['csrf_cookie_name'] = 'csrf_cookie_name';
299: $config['csrf_expire'] = 7200;
300: 
301: /*

==================================================
vulnerability : debug
description : TRUE may show debug message to an attacker 
reference : http://yyyyyy.yyyyy
filename : ../sample/codeigniter/lcb/app/application/config/database.php
=================================================
52: $db['default']['password'] = '';
53: $db['default']['database'] = 'lineage_dev';
54: $db['default']['dbdriver'] = 'mysql';
55: $db['default']['dbprefix'] = '';
56: $db['default']['pconnect'] = FALSE;
57: $db['default']['db_debug'] = TRUE;
58: $db['default']['cache_on'] = FALSE;
59: $db['default']['cachedir'] = '';
60: $db['default']['char_set'] = 'utf8';
61: $db['default']['dbcollat'] = 'utf8_general_ci';
62: $db['default']['swap_pre'] = '';

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.kamome-dev.php
=================================================
277: |
278: | Determines whether the XSS filter is always active when GET, POST or
279: | COOKIE data is encountered
280: |
281: */
282: $config['global_xss_filtering'] = FALSE;
283: 
284: /*
285: |--------------------------------------------------------------------------
286: | Cross Site Request Forgery
287: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.kamome-dev.php
=================================================
291: |
292: | 'csrf_token_name' = The token name
293: | 'csrf_cookie_name' = The cookie name
294: | 'csrf_expire' = The number in seconds the token should expire.
295: */
296: $config['csrf_protection'] = FALSE;
297: $config['csrf_token_name'] = 'csrf_test_name';
298: $config['csrf_cookie_name'] = 'csrf_cookie_name';
299: $config['csrf_expire'] = 7200;
300: 
301: /*

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.php
=================================================
282: |
283: | Determines whether the XSS filter is always active when GET, POST or
284: | COOKIE data is encountered
285: |
286: */
287: $config['global_xss_filtering'] = FALSE;
288: 
289: /*
290: |--------------------------------------------------------------------------
291: | Cross Site Request Forgery
292: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.php
=================================================
296: |
297: | 'csrf_token_name' = The token name
298: | 'csrf_cookie_name' = The cookie name
299: | 'csrf_expire' = The number in seconds the token should expire.
300: */
301: $config['csrf_protection'] = FALSE;
302: $config['csrf_token_name'] = 'csrf_test_name';
303: $config['csrf_cookie_name'] = 'csrf_cookie_name';
304: $config['csrf_expire'] = 7200;
305: 
306: /*

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.jongcheon.seong-dev.php
=================================================
277: |
278: | Determines whether the XSS filter is always active when GET, POST or
279: | COOKIE data is encountered
280: |
281: */
282: $config['global_xss_filtering'] = FALSE;
283: 
284: /*
285: |--------------------------------------------------------------------------
286: | Cross Site Request Forgery
287: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.jongcheon.seong-dev.php
=================================================
291: |
292: | 'csrf_token_name' = The token name
293: | 'csrf_cookie_name' = The cookie name
294: | 'csrf_expire' = The number in seconds the token should expire.
295: */
296: $config['csrf_protection'] = FALSE;
297: $config['csrf_token_name'] = 'csrf_test_name';
298: $config['csrf_cookie_name'] = 'csrf_cookie_name';
299: $config['csrf_expire'] = 7200;
300: 
301: /*

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.victor.php
=================================================
277: |
278: | Determines whether the XSS filter is always active when GET, POST or
279: | COOKIE data is encountered
280: |
281: */
282: $config['global_xss_filtering'] = FALSE;
283: 
284: /*
285: |--------------------------------------------------------------------------
286: | Cross Site Request Forgery
287: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.victor.php
=================================================
291: |
292: | 'csrf_token_name' = The token name
293: | 'csrf_cookie_name' = The cookie name
294: | 'csrf_expire' = The number in seconds the token should expire.
295: */
296: $config['csrf_protection'] = FALSE;
297: $config['csrf_token_name'] = 'csrf_test_name';
298: $config['csrf_cookie_name'] = 'csrf_cookie_name';
299: $config['csrf_expire'] = 7200;
300: 
301: /*

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.example.php
=================================================
276: |
277: | Determines whether the XSS filter is always active when GET, POST or
278: | COOKIE data is encountered
279: |
280: */
281: $config['global_xss_filtering'] = FALSE;
282: 
283: /*
284: |--------------------------------------------------------------------------
285: | Cross Site Request Forgery
286: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.example.php
=================================================
290: |
291: | 'csrf_token_name' = The token name
292: | 'csrf_cookie_name' = The cookie name
293: | 'csrf_expire' = The number in seconds the token should expire.
294: */
295: $config['csrf_protection'] = FALSE;
296: $config['csrf_token_name'] = 'csrf_test_name';
297: $config['csrf_cookie_name'] = 'csrf_cookie_name';
298: $config['csrf_expire'] = 7200;
299: 
300: /*

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.production.php
=================================================
277: |
278: | Determines whether the XSS filter is always active when GET, POST or
279: | COOKIE data is encountered
280: |
281: */
282: $config['global_xss_filtering'] = FALSE;
283: 
284: /*
285: |--------------------------------------------------------------------------
286: | Cross Site Request Forgery
287: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.production.php
=================================================
291: |
292: | 'csrf_token_name' = The token name
293: | 'csrf_cookie_name' = The cookie name
294: | 'csrf_expire' = The number in seconds the token should expire.
295: */
296: $config['csrf_protection'] = FALSE;
297: $config['csrf_token_name'] = 'csrf_test_name';
298: $config['csrf_cookie_name'] = 'csrf_cookie_name';
299: $config['csrf_expire'] = 7200;
300: 
301: /*

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/app/application/config/config.staging.php
=================================================
277: |
278: | Determines whether the XSS filter is always active when GET, POST or
279: | COOKIE data is encountered
280: |
281: */
282: $config['global_xss_filtering'] = FALSE;
283: 
284: /*
285: |--------------------------------------------------------------------------
286: | Cross Site Request Forgery
287: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/app/application/config/config.staging.php
=================================================
291: |
292: | 'csrf_token_name' = The token name
293: | 'csrf_cookie_name' = The cookie name
294: | 'csrf_expire' = The number in seconds the token should expire.
295: */
296: $config['csrf_protection'] = FALSE;
297: $config['csrf_token_name'] = 'csrf_test_name';
298: $config['csrf_cookie_name'] = 'csrf_cookie_name';
299: $config['csrf_expire'] = 7200;
300: 
301: /*

==================================================
vulnerability : xss
description : FALSE may could occur xss, turn TRUE
reference : http://xxxxx.xxxx
filename : ../sample/codeigniter/lcb/config/settings/app/application/config/config.php
=================================================
276: |
277: | Determines whether the XSS filter is always active when GET, POST or
278: | COOKIE data is encountered
279: |
280: */
281: $config['global_xss_filtering'] = FALSE;
282: 
283: /*
284: |--------------------------------------------------------------------------
285: | Cross Site Request Forgery
286: |--------------------------------------------------------------------------

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/config/settings/app/application/config/config.php
=================================================
290: |
291: | 'csrf_token_name' = The token name
292: | 'csrf_cookie_name' = The cookie name
293: | 'csrf_expire' = The number in seconds the token should expire.
294: */
295: $config['csrf_protection'] = FALSE;
296: $config['csrf_token_name'] = 'csrf_test_name';
297: $config['csrf_cookie_name'] = 'csrf_cookie_name';
298: $config['csrf_expire'] = 7200;
299: 
300: /*

==================================================
vulnerability : debug
description : TRUE may show debug message to an attacker 
reference : http://yyyyyy.yyyyy
filename : ../sample/codeigniter/lcb/support/application/config/database.php
=================================================
52: $db['default']['password'] = '';
53: $db['default']['database'] = 'lineage_support';
54: $db['default']['dbdriver'] = 'mysql';
55: $db['default']['dbprefix'] = '';
56: $db['default']['pconnect'] = FALSE;
57: $db['default']['db_debug'] = TRUE;
58: $db['default']['cache_on'] = FALSE;
59: $db['default']['cachedir'] = '';
60: $db['default']['char_set'] = 'utf8';
61: $db['default']['dbcollat'] = 'utf8_general_ci';
62: $db['default']['swap_pre'] = '';

==================================================
vulnerability : csrf
description : FALSE may occur csrf, turn TRUE
reference : https://codeigniter.com/userguide3/libraries/security.html
filename : ../sample/codeigniter/lcb/support/application/config/config.php
=================================================
297: |
298: | 'csrf_token_name' = The token name
299: | 'csrf_cookie_name' = The cookie name
300: | 'csrf_expire' = The number in seconds the token should expire.
301: */
302: $config['csrf_protection'] = FALSE;
303: $config['csrf_token_name'] = 'csrf_test_name';
304: $config['csrf_cookie_name'] = 'csrf_cookie_name';
305: $config['csrf_expire'] = 7200;
306: 
307: /*

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/support/application/models/account_model.php
=================================================
7:         $this->load->model('authenticate_model');
8:     }
9: 
10:     public function account_list()
11:     {
12:         $query = $this->db->query('SELECT * FROM support_users');
13:         $result = $query->result();
14:         if (empty($result)) {
15:             return false;
16:         }
17: 

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/support/application/models/account_model.php
=================================================
23:         if (empty($privilege)) {
24:             $privilege = array(
25:                 'all'   => 'none',
26:             );
27:         }
28:         $query = $this->db->query(
29:             "INSERT INTO `support_users` SET username=?, password_hash=?, privilege=?, ctime=now()", array(
30:             'username'  => $username,
31:             'password_hash'  => $this->authenticate_model->get_password_hash($password),
32:             'privilege' => json_encode($privilege),
33:         ));

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/support/application/models/account_model.php
=================================================
41:         return "Account " .  $username . " registerd!";
42:     }
43: 
44:     public function remove_account($username)
45:     {
46:         $query = $this->db->query(
47:             "DELETE FROM `support_users` WHERE username=?", array(
48:             'username'  => $username,
49:         ));
50: 
51:         if ($query) {

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/support/application/models/account_model.php
=================================================
55:         }
56:     }
57: 
58:     public function update_password($username, $password)
59:     {
60:         $query = $this->db->query(
61:             "UPDATE `support_users` SET password_hash=? WHERE username=?", array(
62:             'password_hash' => $this->authenticate_model->get_password_hash($password),
63:             'username'  => $username,
64:         ));
65: 

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/support/application/models/account_model.php
=================================================
70:         return "Updated password for user $username";
71:     }
72: 
73:     public function update_privilege($username, $privilege)
74:     {
75:         $query = $this->db->query(
76:             "UPDATE `support_users` SET privilege=? WHERE username=?", array(
77:             'privilege' => json_encode($privilege),
78:             'username'  => $username,
79:         ));
80: 

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/support/application/models/authenticate_model.php
=================================================
37:         return $result;
38:     }
39: 
40:     public function get_current_session()
41:     {
42:         $query = $this->db->query(
43:             "SELECT `current_privilege` FROM `ci_sessions` WHERE session_id=?", array(
44:             'session_id'  => $this->session->userdata['session_id'],
45:         ));
46:         $result = $query->result();
47:         if (empty($result) || empty($result[0]->current_privilege)) {

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/support/application/models/authenticate_model.php
=================================================
54:         return $session_data;
55:     }
56: 
57:     public function authenticate($username, $password)
58:     {
59:         $query = $this->db->query(
60:             "SELECT `privilege` FROM `support_users` WHERE username=? AND password_hash=?", array(
61:             'username'  => $username,
62:             'password_hash'  => $this->get_password_hash($password),
63:         ));
64: 

==================================================
vulnerability : sql
description : direct sql summitting may occure sql injection 
reference : https://codeigniter.com/userguide3/database/queries.html
filename : ../sample/codeigniter/lcb/support/application/models/authenticate_model.php
=================================================
69:         }
70: 
71:         $this->session->set_userdata('username', $username);
72: 
73:         // Update privilege of session
74:         $query = $this->db->query(
75:             "UPDATE `ci_sessions` SET current_privilege=? WHERE session_id=?", array(
76:             'current_privilege' => $result[0]->privilege,
77:             'session_id'    => $this->session->userdata('session_id'),
78:         ));
79: 

